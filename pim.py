import json
import os
import random

ARQUIVO = "usuarios_lgpd.json"

def carregar_dados():
    if os.path.exists(ARQUIVO):
        with open(ARQUIVO, "r") as f:
            return json.load(f)
    return []

def salvar_dados(lista):
    with open(ARQUIVO, "w") as f:
        json.dump(lista, f, indent=4)

cursos_disponiveis = [
    "L√≥gica",
    "Seguran√ßa Digital",
    "Introdu√ß√£o √† Programa√ß√£o",
    "Redes de Computadores",
    "Banco de Dados",
    "Empreendedorismo Digital"
]

medidas_lgpd = [
    "1. Coleta m√≠nima de dados necess√°rios.",
    "2. Consentimento do usu√°rio ao se cadastrar.",
    "3. Dados n√£o ser√£o compartilhados com terceiros.",
    "4. Acesso protegido por senha.",
    "5. Criptografia de senhas (simulada).",
    "6. Possibilidade de altera√ß√£o de senha.",
    "7. Verifica√ß√£o de duas etapas no login.",
    "8. Backup regular dos dados (sugest√£o para ONG).",
    "9. Direito de exclus√£o dos dados (LGPD).",
    "10. Informa√ß√µes claras sobre o uso dos dados."
]

def exibir_medidas_lgpd():
    print("\n--- Medidas de Seguran√ßa LGPD ---")
    for item in medidas_lgpd:
        print(item)
    input("\nPressione Enter para retornar ao menu...")

def registrar_usuario():
    print("\n--- Cadastro de Usu√°rio ---")
    nome = input("Nome: ")
    idade = int(input("Idade: "))

    print("\nCursos dispon√≠veis:")
    for i, curso in enumerate(cursos_disponiveis, 1):
        print(f"{i}. {curso}")
    opcao = int(input("Escolha o n√∫mero do curso: "))
    curso = cursos_disponiveis[opcao - 1]

    nota = float(input("Nota final (0 a 10): "))
    senha = input("Crie uma senha (m√≠nimo 6 caracteres): ")

    if len(senha) < 6:
        print("‚ö†Ô∏è Senha fraca. Opera√ß√£o cancelada.")
        return

    status = "Aprovado" if nota >= 7 else "Reprovado"

    usuario = {
        "nome": nome,
        "idade": idade,
        "curso": curso,
        "nota": nota,
        "status": status,
        "senha": senha
    }

    dados = carregar_dados()
    dados.append(usuario)
    salvar_dados(dados)
    print("‚úÖ Usu√°rio cadastrado com sucesso!")

def mostrar_usuarios():
    print("\n--- Lista de Usu√°rios ---")
    dados = carregar_dados()
    for u in dados:
        print(f"Nome: {u['nome']} | Curso: {u['curso']} | Nota: {u['nota']} | Status: {u['status']}")

def calcular_media():
    dados = carregar_dados()
    if not dados:
        print("Nenhum dado cadastrado.")
        return
    notas = [u['nota'] for u in dados]
    media = sum(notas) / len(notas)
    print(f"\nüìä M√©dia das notas: {media:.2f}")

def verificar_duas_etapas(nome, senha):
    dados = carregar_dados()
    for u in dados:
        if u['nome'] == nome and u['senha'] == senha:
            codigo = str(random.randint(1000, 9999))
            print(f"C√≥digo de verifica√ß√£o (simulado): {codigo}")
            entrada = input("Digite o c√≥digo de verifica√ß√£o: ")
            if entrada == codigo:
                print("‚úÖ Login realizado com sucesso!")
                return True
            else:
                print("‚ùå C√≥digo incorreto.")
                return False
    print("‚ùå Usu√°rio ou senha incorretos.")
    return False

def trocar_senha():
    print("\n--- Recupera√ß√£o de Senha ---")
    nome = input("Nome: ")
    idade = int(input("Confirme sua idade: "))
    dados = carregar_dados()
    for u in dados:
        if u['nome'] == nome and u['idade'] == idade:
            nova = input("Digite a nova senha: ")
            if len(nova) < 6:
                print("‚ö†Ô∏è Senha muito curta.")
                return
            u['senha'] = nova
            salvar_dados(dados)
            print("üîê Senha atualizada com sucesso.")
            return
    print("‚ùå Usu√°rio n√£o encontrado.")

def excluir_usuario():
    print("\n--- Exclus√£o de Usu√°rio ---")
    nome = input("Digite o nome do usu√°rio a ser exclu√≠do: ")
    dados = carregar_dados()
    novos_dados = [u for u in dados if u['nome'] != nome]
    if len(novos_dados) < len(dados):
        salvar_dados(novos_dados)
        print("üóëÔ∏è Usu√°rio exclu√≠do.")
    else:
        print("Usu√°rio n√£o encontrado.")

def menu():
    while True:
        print("\n--- Plataforma Digital ONG ---")
        print("1. Cadastrar novo usu√°rio")
        print("2. Mostrar usu√°rios cadastrados")
        print("3. Calcular m√©dia das notas")
        print("4. Ver medidas LGPD")
        print("5. Login com verifica√ß√£o de duas etapas")
        print("6. Trocar senha")
        print("7. Excluir usu√°rio")
        print("8. Sair")

        opcao = input("Escolha uma op√ß√£o: ")

        if opcao == "1":
            registrar_usuario()
        elif opcao == "2":
            mostrar_usuarios()
        elif opcao == "3":
            calcular_media()
        elif opcao == "4":
            exibir_medidas_lgpd()
        elif opcao == "5":
            nome = input("Nome: ")
            senha = input("Senha: ")
            verificar_duas_etapas(nome, senha)
        elif opcao == "6":
            trocar_senha()
        elif opcao == "7":
            excluir_usuario()
        elif opcao == "8":
            print("Saindo...")
            break
        else:
            print("Op√ß√£o inv√°lida.")

menu()
